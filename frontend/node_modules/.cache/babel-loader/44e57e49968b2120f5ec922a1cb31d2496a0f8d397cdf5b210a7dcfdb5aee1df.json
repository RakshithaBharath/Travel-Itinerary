{"ast":null,"code":"var _jsxFileName = \"D:\\\\ExcelR\\\\FrontEnd-Travel\\\\travel-iitinary\\\\src\\\\components\\\\Itinerary.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// Load Google Maps JS API script dynamically for autocomplete\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction loadGoogleMapsScript(apiKey, callback) {\n  if (window.google) {\n    callback();\n    return;\n  }\n  const googleMapsApiKey = travel.env.REACT_APP_GOOGLE_MAPS_API_KEY;\n  const script = document.createElement(\"script\");\n  script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&libraries=places`;\n  script.async = true;\n  script.onload = callback;\n  document.body.appendChild(script);\n}\nconst Itinerary = () => {\n  _s();\n  const GOOGLE_API_KEY = \"YOUR_GOOGLE_API_KEY_HERE\"; // Replace with your key\n\n  const [tripName, setTripName] = useState(\"\");\n  const [destination, setDestination] = useState(\"\");\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [days, setDays] = useState([]);\n  const [destinationBounds, setDestinationBounds] = useState(null);\n\n  // Refs for destination autocomplete input\n  const destinationInputRef = useRef(null);\n  const destinationAutocompleteRef = useRef(null);\n\n  // Load Google Maps script and initialize destination autocomplete\n  useEffect(() => {\n    loadGoogleMapsScript(GOOGLE_API_KEY, () => {\n      if (destinationInputRef.current) {\n        const options = {\n          types: [\"(cities)\"] // Only cities\n        };\n        destinationAutocompleteRef.current = new window.google.maps.places.Autocomplete(destinationInputRef.current, options);\n        destinationAutocompleteRef.current.addListener(\"place_changed\", () => {\n          const place = destinationAutocompleteRef.current.getPlace();\n          if (!place.geometry) {\n            alert(\"Please select a valid city.\");\n            return;\n          }\n          setDestination(place.formatted_address);\n\n          // Set bounds to restrict subsequent location autocompletes\n          setDestinationBounds(place.geometry.viewport || place.geometry.bounds);\n        });\n      }\n    });\n  }, []);\n\n  // Update days array when start or end dates change\n  useEffect(() => {\n    if (startDate && endDate) {\n      const start = new Date(startDate);\n      const end = new Date(endDate);\n      if (end < start) {\n        alert(\"End date cannot be before start date\");\n        setEndDate(\"\");\n        setDays([]);\n        return;\n      }\n      const dayCount = Math.floor((end - start) / (1000 * 60 * 60 * 24)) + 1;\n      const newDays = [];\n      for (let i = 0; i < dayCount; i++) {\n        const date = new Date(start);\n        date.setDate(start.getDate() + i);\n        newDays.push({\n          date: date.toISOString().slice(0, 10),\n          locations: [],\n          notes: \"\"\n        });\n      }\n      setDays(newDays);\n    } else {\n      setDays([]);\n    }\n  }, [startDate, endDate]);\n\n  // Add location to a specific day\n  const addLocation = dayIndex => {\n    setDays(prevDays => {\n      const newDays = [...prevDays];\n      newDays[dayIndex].locations.push({\n        name: \"\",\n        time: \"\"\n      });\n      return newDays;\n    });\n  };\n\n  // Update location name or time, with Google Places autocomplete restricted to destinationBounds\n  const updateLocation = (dayIndex, locIndex, field, value) => {\n    setDays(prevDays => {\n      const newDays = [...prevDays];\n      newDays[dayIndex].locations[locIndex][field] = value;\n      return newDays;\n    });\n  };\n\n  // Handle notes update per day\n  const updateNotes = (dayIndex, notes) => {\n    setDays(prevDays => {\n      const newDays = [...prevDays];\n      newDays[dayIndex].notes = notes;\n      return newDays;\n    });\n  };\n\n  // Refs for location inputs and their autocompletes\n  const locationInputRefs = useRef({}); // key: `${dayIndex}-${locIndex}`\n  const locationAutocompleteRefs = useRef({});\n\n  // Initialize autocomplete for location inputs dynamically\n  useEffect(() => {\n    if (!window.google || !destinationBounds) return;\n    days.forEach((day, dayIndex) => {\n      day.locations.forEach((loc, locIndex) => {\n        const key = `${dayIndex}-${locIndex}`;\n        if (!locationAutocompleteRefs.current[key] && locationInputRefs.current[key]) {\n          const options = {\n            bounds: destinationBounds,\n            strictBounds: true\n          };\n          locationAutocompleteRefs.current[key] = new window.google.maps.places.Autocomplete(locationInputRefs.current[key], options);\n          locationAutocompleteRefs.current[key].addListener(\"place_changed\", () => {\n            const place = locationAutocompleteRefs.current[key].getPlace();\n            if (!place.geometry) {\n              alert(\"Please select a valid place.\");\n              updateLocation(dayIndex, locIndex, \"name\", \"\");\n              return;\n            }\n            updateLocation(dayIndex, locIndex, \"name\", place.formatted_address);\n          });\n        }\n      });\n    });\n  }, [days, destinationBounds]);\n\n  // Remove location from a day\n  const removeLocation = (dayIndex, locIndex) => {\n    setDays(prevDays => {\n      const newDays = [...prevDays];\n      newDays[dayIndex].locations.splice(locIndex, 1);\n      return newDays;\n    });\n  };\n\n  // Submit handler (just log for now)\n  const handleSubmit = e => {\n    e.preventDefault();\n    const tripData = {\n      tripName,\n      destination,\n      startDate,\n      endDate,\n      days\n    };\n    console.log(\"Trip Data Submitted:\", tripData);\n    alert(\"Trip planned! Check console for data.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-center text-primary\",\n      children: \"Trip Itinerary Planner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tripName\",\n            className: \"form-label\",\n            children: \"Trip Name *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"tripName\",\n            className: \"form-control\",\n            placeholder: \"Enter trip title\",\n            value: tripName,\n            onChange: e => setTripName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destination\",\n            className: \"form-label\",\n            children: \"Destination City *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"destination\",\n            className: \"form-control\",\n            placeholder: \"Select destination city\",\n            value: destination,\n            ref: destinationInputRef,\n            onChange: e => setDestination(e.target.value),\n            required: true,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"startDate\",\n            className: \"form-label\",\n            children: \"Start Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"startDate\",\n            className: \"form-control\",\n            value: startDate,\n            onChange: e => setStartDate(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"endDate\",\n            className: \"form-label\",\n            children: \"End Date *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"endDate\",\n            className: \"form-control\",\n            value: endDate,\n            onChange: e => setEndDate(e.target.value),\n            required: true,\n            min: startDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), days.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: days.map((day, dayIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card mb-4 shadow-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Day \", dayIndex + 1, \" - \", day.date]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [day.locations.map((loc, locIndex) => {\n              const locKey = `${dayIndex}-${locIndex}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row align-items-center mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-6\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    className: \"form-control\",\n                    placeholder: \"Location\",\n                    value: loc.name,\n                    ref: el => {\n                      locationInputRefs.current[locKey] = el;\n                    },\n                    onChange: e => updateLocation(dayIndex, locIndex, \"name\", e.target.value),\n                    required: true,\n                    autoComplete: \"off\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-4\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"time\",\n                    className: \"form-control\",\n                    placeholder: \"Time (optional)\",\n                    value: loc.time,\n                    onChange: e => updateLocation(dayIndex, locIndex, \"time\", e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-md-2 text-end\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"btn btn-danger btn-sm\",\n                    onClick: () => removeLocation(dayIndex, locIndex),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 25\n                }, this)]\n              }, locKey, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 23\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-outline-primary btn-sm\",\n              onClick: () => addLocation(dayIndex),\n              children: \"+ Add Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `notes-${dayIndex}`,\n                className: \"form-label\",\n                children: \"Notes / Comments\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                id: `notes-${dayIndex}`,\n                className: \"form-control\",\n                rows: \"2\",\n                value: day.notes,\n                onChange: e => updateNotes(dayIndex, e.target.value),\n                placeholder: \"Any special notes for this day\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 17\n          }, this)]\n        }, dayIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success btn-lg\",\n          children: \"Save Itinerary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(Itinerary, \"AMrPNPaYZe0VxTN4mQwydTSqlcY=\");\n_c = Itinerary;\nexport default Itinerary;\nvar _c;\n$RefreshReg$(_c, \"Itinerary\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","loadGoogleMapsScript","apiKey","callback","window","google","googleMapsApiKey","travel","env","REACT_APP_GOOGLE_MAPS_API_KEY","script","document","createElement","src","async","onload","body","appendChild","Itinerary","_s","GOOGLE_API_KEY","tripName","setTripName","destination","setDestination","startDate","setStartDate","endDate","setEndDate","days","setDays","destinationBounds","setDestinationBounds","destinationInputRef","destinationAutocompleteRef","current","options","types","maps","places","Autocomplete","addListener","place","getPlace","geometry","alert","formatted_address","viewport","bounds","start","Date","end","dayCount","Math","floor","newDays","i","date","setDate","getDate","push","toISOString","slice","locations","notes","addLocation","dayIndex","prevDays","name","time","updateLocation","locIndex","field","value","updateNotes","locationInputRefs","locationAutocompleteRefs","forEach","day","loc","key","strictBounds","removeLocation","splice","handleSubmit","e","preventDefault","tripData","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","onChange","target","required","ref","autoComplete","min","length","map","locKey","el","onClick","rows","_c","$RefreshReg$"],"sources":["D:/ExcelR/FrontEnd-Travel/travel-iitinary/src/components/Itinerary.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\n// Load Google Maps JS API script dynamically for autocomplete\r\nfunction loadGoogleMapsScript(apiKey, callback) {\r\n  if (window.google) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  const googleMapsApiKey = travel.env.REACT_APP_GOOGLE_MAPS_API_KEY;\r\n\r\n  const script = document.createElement(\"script\");\r\n  script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&libraries=places`;\r\n  script.async = true;\r\n  script.onload = callback;\r\n  document.body.appendChild(script);\r\n}\r\n\r\nconst Itinerary = () => {\r\n  const GOOGLE_API_KEY = \"YOUR_GOOGLE_API_KEY_HERE\"; // Replace with your key\r\n\r\n  const [tripName, setTripName] = useState(\"\");\r\n  const [destination, setDestination] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [days, setDays] = useState([]);\r\n  const [destinationBounds, setDestinationBounds] = useState(null);\r\n\r\n  // Refs for destination autocomplete input\r\n  const destinationInputRef = useRef(null);\r\n  const destinationAutocompleteRef = useRef(null);\r\n\r\n  // Load Google Maps script and initialize destination autocomplete\r\n  useEffect(() => {\r\n    loadGoogleMapsScript(GOOGLE_API_KEY, () => {\r\n      if (destinationInputRef.current) {\r\n        const options = {\r\n          types: [\"(cities)\"], // Only cities\r\n        };\r\n        destinationAutocompleteRef.current =\r\n          new window.google.maps.places.Autocomplete(\r\n            destinationInputRef.current,\r\n            options\r\n          );\r\n\r\n        destinationAutocompleteRef.current.addListener(\"place_changed\", () => {\r\n          const place = destinationAutocompleteRef.current.getPlace();\r\n          if (!place.geometry) {\r\n            alert(\"Please select a valid city.\");\r\n            return;\r\n          }\r\n          setDestination(place.formatted_address);\r\n\r\n          // Set bounds to restrict subsequent location autocompletes\r\n          setDestinationBounds(\r\n            place.geometry.viewport || place.geometry.bounds\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  // Update days array when start or end dates change\r\n  useEffect(() => {\r\n    if (startDate && endDate) {\r\n      const start = new Date(startDate);\r\n      const end = new Date(endDate);\r\n      if (end < start) {\r\n        alert(\"End date cannot be before start date\");\r\n        setEndDate(\"\");\r\n        setDays([]);\r\n        return;\r\n      }\r\n      const dayCount = Math.floor((end - start) / (1000 * 60 * 60 * 24)) + 1;\r\n      const newDays = [];\r\n      for (let i = 0; i < dayCount; i++) {\r\n        const date = new Date(start);\r\n        date.setDate(start.getDate() + i);\r\n        newDays.push({\r\n          date: date.toISOString().slice(0, 10),\r\n          locations: [],\r\n          notes: \"\",\r\n        });\r\n      }\r\n      setDays(newDays);\r\n    } else {\r\n      setDays([]);\r\n    }\r\n  }, [startDate, endDate]);\r\n\r\n  // Add location to a specific day\r\n  const addLocation = (dayIndex) => {\r\n    setDays((prevDays) => {\r\n      const newDays = [...prevDays];\r\n      newDays[dayIndex].locations.push({\r\n        name: \"\",\r\n        time: \"\",\r\n      });\r\n      return newDays;\r\n    });\r\n  };\r\n\r\n  // Update location name or time, with Google Places autocomplete restricted to destinationBounds\r\n  const updateLocation = (dayIndex, locIndex, field, value) => {\r\n    setDays((prevDays) => {\r\n      const newDays = [...prevDays];\r\n      newDays[dayIndex].locations[locIndex][field] = value;\r\n      return newDays;\r\n    });\r\n  };\r\n\r\n  // Handle notes update per day\r\n  const updateNotes = (dayIndex, notes) => {\r\n    setDays((prevDays) => {\r\n      const newDays = [...prevDays];\r\n      newDays[dayIndex].notes = notes;\r\n      return newDays;\r\n    });\r\n  };\r\n\r\n  // Refs for location inputs and their autocompletes\r\n  const locationInputRefs = useRef({}); // key: `${dayIndex}-${locIndex}`\r\n  const locationAutocompleteRefs = useRef({});\r\n\r\n  // Initialize autocomplete for location inputs dynamically\r\n  useEffect(() => {\r\n    if (!window.google || !destinationBounds) return;\r\n\r\n    days.forEach((day, dayIndex) => {\r\n      day.locations.forEach((loc, locIndex) => {\r\n        const key = `${dayIndex}-${locIndex}`;\r\n        if (\r\n          !locationAutocompleteRefs.current[key] &&\r\n          locationInputRefs.current[key]\r\n        ) {\r\n          const options = {\r\n            bounds: destinationBounds,\r\n            strictBounds: true,\r\n          };\r\n          locationAutocompleteRefs.current[key] =\r\n            new window.google.maps.places.Autocomplete(\r\n              locationInputRefs.current[key],\r\n              options\r\n            );\r\n          locationAutocompleteRefs.current[key].addListener(\r\n            \"place_changed\",\r\n            () => {\r\n              const place = locationAutocompleteRefs.current[key].getPlace();\r\n              if (!place.geometry) {\r\n                alert(\"Please select a valid place.\");\r\n                updateLocation(dayIndex, locIndex, \"name\", \"\");\r\n                return;\r\n              }\r\n              updateLocation(\r\n                dayIndex,\r\n                locIndex,\r\n                \"name\",\r\n                place.formatted_address\r\n              );\r\n            }\r\n          );\r\n        }\r\n      });\r\n    });\r\n  }, [days, destinationBounds]);\r\n\r\n  // Remove location from a day\r\n  const removeLocation = (dayIndex, locIndex) => {\r\n    setDays((prevDays) => {\r\n      const newDays = [...prevDays];\r\n      newDays[dayIndex].locations.splice(locIndex, 1);\r\n      return newDays;\r\n    });\r\n  };\r\n\r\n  // Submit handler (just log for now)\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const tripData = {\r\n      tripName,\r\n      destination,\r\n      startDate,\r\n      endDate,\r\n      days,\r\n    };\r\n    console.log(\"Trip Data Submitted:\", tripData);\r\n    alert(\"Trip planned! Check console for data.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h2 className=\"mb-4 text-center text-primary\">Trip Itinerary Planner</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Trip Details */}\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"tripName\" className=\"form-label\">\r\n              Trip Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"tripName\"\r\n              className=\"form-control\"\r\n              placeholder=\"Enter trip title\"\r\n              value={tripName}\r\n              onChange={(e) => setTripName(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"destination\" className=\"form-label\">\r\n              Destination City *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"destination\"\r\n              className=\"form-control\"\r\n              placeholder=\"Select destination city\"\r\n              value={destination}\r\n              ref={destinationInputRef}\r\n              onChange={(e) => setDestination(e.target.value)}\r\n              required\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"startDate\" className=\"form-label\">\r\n              Start Date *\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"startDate\"\r\n              className=\"form-control\"\r\n              value={startDate}\r\n              onChange={(e) => setStartDate(e.target.value)}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"col-md-6 mb-3\">\r\n            <label htmlFor=\"endDate\" className=\"form-label\">\r\n              End Date *\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"endDate\"\r\n              className=\"form-control\"\r\n              value={endDate}\r\n              onChange={(e) => setEndDate(e.target.value)}\r\n              required\r\n              min={startDate}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Days and Locations */}\r\n        {days.length > 0 && (\r\n          <div>\r\n            {days.map((day, dayIndex) => (\r\n              <div key={dayIndex} className=\"card mb-4 shadow-sm\">\r\n                <div className=\"card-header bg-primary text-white\">\r\n                  <strong>\r\n                    Day {dayIndex + 1} - {day.date}\r\n                  </strong>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {/* Locations */}\r\n                  {day.locations.map((loc, locIndex) => {\r\n                    const locKey = `${dayIndex}-${locIndex}`;\r\n                    return (\r\n                      <div key={locKey} className=\"row align-items-center mb-3\">\r\n                        <div className=\"col-md-6\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Location\"\r\n                            value={loc.name}\r\n                            ref={(el) => {\r\n                              locationInputRefs.current[locKey] = el;\r\n                            }}\r\n                            onChange={(e) =>\r\n                              updateLocation(\r\n                                dayIndex,\r\n                                locIndex,\r\n                                \"name\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                            required\r\n                            autoComplete=\"off\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                          <input\r\n                            type=\"time\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Time (optional)\"\r\n                            value={loc.time}\r\n                            onChange={(e) =>\r\n                              updateLocation(\r\n                                dayIndex,\r\n                                locIndex,\r\n                                \"time\",\r\n                                e.target.value\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-md-2 text-end\">\r\n                          <button\r\n                            type=\"button\"\r\n                            className=\"btn btn-danger btn-sm\"\r\n                            onClick={() => removeLocation(dayIndex, locIndex)}\r\n                          >\r\n                            Remove\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-outline-primary btn-sm\"\r\n                    onClick={() => addLocation(dayIndex)}\r\n                  >\r\n                    + Add Location\r\n                  </button>\r\n\r\n                  {/* Day Notes */}\r\n                  <div className=\"mt-3\">\r\n                    <label htmlFor={`notes-${dayIndex}`} className=\"form-label\">\r\n                      Notes / Comments\r\n                    </label>\r\n                    <textarea\r\n                      id={`notes-${dayIndex}`}\r\n                      className=\"form-control\"\r\n                      rows=\"2\"\r\n                      value={day.notes}\r\n                      onChange={(e) => updateNotes(dayIndex, e.target.value)}\r\n                      placeholder=\"Any special notes for this day\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"d-grid\">\r\n          <button type=\"submit\" className=\"btn btn-success btn-lg\">\r\n            Save Itinerary\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Itinerary;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}