{"ast":null,"code":"const [email, setEmail] = useState(\"\");\nconst [password, setPassword] = useState(\"\");\nconst [errorMsg, setErrorMsg] = useState(\"\");\n\n// ❗ REMOVE: useNavigate() — you no longer need it\n// const navigate = useNavigate();  ← remove this line\n\n// Add this prop from parent: onLogin(username)\nconst Login = async e => {\n  e.preventDefault();\n  if (!email || !password) {\n    setErrorMsg(\"Email and Password are required\");\n    return;\n  }\n  try {\n    const response = await fetch(\"http://localhost:8090/api/user/auth/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (response.ok) {\n      const data = await response.text(); // assuming this is a string like \"token:username\"\n\n      // ✅ Extract token and username from plain string\n      const [token, username] = data.split(\":\");\n      localStorage.setItem(\"token\", token);\n      localStorage.setItem(\"username\", username);\n      setErrorMsg(\"\");\n\n      // ✅ Call parent handler to update UI (Main.jsx)\n      if (typeof onLogin === \"function\") {\n        onLogin(username);\n      }\n    } else {\n      const errorMsg = await response.text();\n      setErrorMsg(errorMsg || \"Login failed\");\n    }\n  } catch (error) {\n    console.error(\"Login Error:\", error);\n    setErrorMsg(\"Server error. Please try again later.\");\n  }\n};\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["email","setEmail","useState","password","setPassword","errorMsg","setErrorMsg","Login","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","text","token","username","split","localStorage","setItem","onLogin","error","console","_c","$RefreshReg$"],"sources":["D:/ExcelR/FrontEnd-Travel/travel-iitinary/src/components/Login.jsx"],"sourcesContent":["const [email, setEmail] = useState(\"\");\r\nconst [password, setPassword] = useState(\"\");\r\nconst [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n// ❗ REMOVE: useNavigate() — you no longer need it\r\n// const navigate = useNavigate();  ← remove this line\r\n\r\n// Add this prop from parent: onLogin(username)\r\nconst Login = async (e) => {\r\n  e.preventDefault();\r\n\r\n  if (!email || !password) {\r\n    setErrorMsg(\"Email and Password are required\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:8090/api/user/auth/login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.text(); // assuming this is a string like \"token:username\"\r\n\r\n      // ✅ Extract token and username from plain string\r\n      const [token, username] = data.split(\":\");\r\n\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"username\", username);\r\n\r\n      setErrorMsg(\"\");\r\n\r\n      // ✅ Call parent handler to update UI (Main.jsx)\r\n      if (typeof onLogin === \"function\") {\r\n        onLogin(username);\r\n      }\r\n    } else {\r\n      const errorMsg = await response.text();\r\n      setErrorMsg(errorMsg || \"Login failed\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Login Error:\", error);\r\n    setErrorMsg(\"Server error. Please try again later.\");\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAM,CAACA,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;AACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AAC5C,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;;AAE5C;AACA;;AAEA;AACA,MAAMK,KAAK,GAAG,MAAOC,CAAC,IAAK;EACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;EAElB,IAAI,CAACT,KAAK,IAAI,CAACG,QAAQ,EAAE;IACvBG,WAAW,CAAC,iCAAiC,CAAC;IAC9C;EACF;EAEA,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACxEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEhB,KAAK;QAAEG;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,IAAIO,QAAQ,CAACO,EAAE,EAAE;MACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;;MAEpC;MACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;MAEzCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;MAE1Cf,WAAW,CAAC,EAAE,CAAC;;MAEf;MACA,IAAI,OAAOmB,OAAO,KAAK,UAAU,EAAE;QACjCA,OAAO,CAACJ,QAAQ,CAAC;MACnB;IACF,CAAC,MAAM;MACL,MAAMhB,QAAQ,GAAG,MAAMK,QAAQ,CAACS,IAAI,CAAC,CAAC;MACtCb,WAAW,CAACD,QAAQ,IAAI,cAAc,CAAC;IACzC;EACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpCpB,WAAW,CAAC,uCAAuC,CAAC;EACtD;AACF,CAAC;AAACsB,EAAA,GAxCIrB,KAAK;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}